package kirjalista.test;
// Generated by ComTest BEGIN
import kirjalista.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.09.22 09:40:51 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa51 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa51() throws SailoException {    // Kirjat: 51
    Kirjat kirjat = new Kirjat(); 
    Kirja b1 = new Kirja(); Kirja b2 = new Kirja(); 
    assertEquals("From: Kirjat line: 55", 0, kirjat.getLkm()); 
    kirjat.lisaa(b1); assertEquals("From: Kirjat line: 56", 1, kirjat.getLkm()); 
    kirjat.lisaa(b2); assertEquals("From: Kirjat line: 57", 2, kirjat.getLkm()); 
    kirjat.lisaa(b1); assertEquals("From: Kirjat line: 58", 3, kirjat.getLkm()); 
    Iterator<Kirja> it = kirjat.iterator(); 
    assertEquals("From: Kirjat line: 60", b1, it.next()); 
    assertEquals("From: Kirjat line: 61", b2, it.next()); 
    assertEquals("From: Kirjat line: 62", b1, it.next()); 
    kirjat.lisaa(b1); assertEquals("From: Kirjat line: 63", 4, kirjat.getLkm()); 
    kirjat.lisaa(b2); assertEquals("From: Kirjat line: 64", 5, kirjat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista79 
   * @throws SailoException when error
   */
  @Test
  public void testPoista79() throws SailoException {    // Kirjat: 79
    Kirjat kirjat = new Kirjat(); 
    Kirja b1 = new Kirja(); 
    kirjat.lisaa(b1); assertEquals("From: Kirjat line: 83", 1, kirjat.getLkm()); 
    kirjat.poista(b1.getTunnusNro()); assertEquals("From: Kirjat line: 84", 0, kirjat.getLkm()); 
    Kirja b2 = new Kirja(); 
    kirjat.lisaa(b2); assertEquals("From: Kirjat line: 86", 1, kirjat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa146 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa146() throws SailoException,CloneNotSupportedException {    // Kirjat: 146
    Kirjat kirjat = new Kirjat(); 
    Kirja b1 = new Kirja(), b2 = new Kirja(); 
    b1.rekisteroi(); b2.rekisteroi(); 
    assertEquals("From: Kirjat line: 152", 0, kirjat.getLkm()); 
    kirjat.korvaaTaiLisaa(b1); assertEquals("From: Kirjat line: 153", 1, kirjat.getLkm()); 
    kirjat.korvaaTaiLisaa(b2); assertEquals("From: Kirjat line: 154", 2, kirjat.getLkm()); 
    Kirja b3 = b1.clone(); 
    Iterator<Kirja> it = kirjat.iterator(); 
    assertEquals("From: Kirjat line: 157", true, it.next() == b1); 
    kirjat.korvaaTaiLisaa(b3); assertEquals("From: Kirjat line: 158", 2, kirjat.getLkm()); 
    it = kirjat.iterator(); 
    Kirja j0 = it.next(); 
    assertEquals("From: Kirjat line: 161", b3, j0); 
    assertEquals("From: Kirjat line: 162", true, j0 == b3); 
    assertEquals("From: Kirjat line: 163", false, j0 == b1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKirjatIterator248 
   * @throws SailoException when error
   */
  @Test
  public void testKirjatIterator248() throws SailoException {    // Kirjat: 248
    Kirjat kirjat = new Kirjat(); 
    Kirja b1 = new Kirja(), b2 = new Kirja(); 
    b1.rekisteroi(); b2.rekisteroi(); 
    kirjat.lisaa(b1); 
    kirjat.lisaa(b2); 
    kirjat.lisaa(b1); 
    Iterator<Kirja>  i=kirjat.iterator(); 
    assertEquals("From: Kirjat line: 259", true, i.next() == b1); 
    assertEquals("From: Kirjat line: 260", true, i.next() == b2); 
    assertEquals("From: Kirjat line: 261", true, i.next() == b1); 
    try {
    i.next(); 
    fail("Kirjat: 262 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}